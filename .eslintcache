[{"C:\\Users\\Notebook\\Documents\\Messanger\\messanger-clone\\src\\reportWebVitals.js":"1","C:\\Users\\Notebook\\Documents\\Messanger\\messanger-clone\\src\\App.js":"2","C:\\Users\\Notebook\\Documents\\Messanger\\messanger-clone\\src\\Message.js":"3","C:\\Users\\Notebook\\Documents\\Messanger\\messanger-clone\\src\\firebase.js":"4","C:\\Users\\Notebook\\Documents\\Messanger\\messanger-clone\\src\\index.js":"5","C:\\MessangerOne\\messanger-clone\\src\\index.js":"6","C:\\MessangerOne\\messanger-clone\\src\\Message.js":"7","C:\\MessangerOne\\messanger-clone\\src\\firebase.js":"8","C:\\MessangerOne\\messanger-clone\\src\\App.js":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":1922,"mtime":1606749817599,"results":"12","hashOfConfig":"11"},{"size":692,"mtime":1606748662446,"results":"13","hashOfConfig":"11"},{"size":601,"mtime":1606737190799,"results":"14","hashOfConfig":"11"},{"size":500,"mtime":499162500000,"results":"15","hashOfConfig":"11"},{"size":500,"mtime":499162500000,"results":"16","hashOfConfig":"17"},{"size":692,"mtime":1606748662446,"results":"18","hashOfConfig":"17"},{"size":541,"mtime":1606985235122,"results":"19","hashOfConfig":"17"},{"size":1922,"mtime":1606749817599,"results":"20","hashOfConfig":"17"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"bf0yif",{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hgximu",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Notebook\\Documents\\Messanger\\messanger-clone\\src\\reportWebVitals.js",[],["42","43"],"C:\\Users\\Notebook\\Documents\\Messanger\\messanger-clone\\src\\App.js",["44","45","46"],"import React, { useState, useEffect } from 'react';\nimport { Button, FormControl, InputLabel, Input } from '@material-ui/core';\nimport './App.css';\nimport Message from './Message';\nimport db from './firebase';\nimport firebase from 'firebase';\nimport FlipMove from 'react-flip-move';\nimport SendIcon from '@material-ui/icons/Send';\nimport { IconButton } from '@material-ui/core';\n\nfunction App() {\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [username, setUsername] = useState('');\n\n  useEffect(() => {\n     db.collection('messages').orderBy(\"timestamp\", \"desc\").onSnapshot(snapshot => {\n       setMessages(snapshot.docs.map(doc => ({id: doc.id, message: doc.data()})))\n     })\n  }, [])\n\n  useEffect(() => {\n    setUsername(prompt('Please enter your name'))\n  }, [])\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n\n    db.collection('messages').add({\n      message: input,\n      username: username,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    })\n    setInput('');\n  }\n\n  return (\n    <div className=\"App\">\n      <img src=\"https://www.jrmyprtr.com/wp-content/uploads/2014/06/messaging-300x300.png?w50&h=50\" />\n      <h1>Hi!</h1>\n      <h2>Welcome {username}</h2>\n\n      <form className=\"app__form\">\n       <FormControl className=\"app__formControl\">\n        \n          <Input className=\"app__input\" placeholder=\"Enter a message...\" value={input} onChange={e => setInput(e.target.value)}/>\n         <IconButton  className=\"app__iconButton\"\n         disabled={!input} variant='contained' color=\"primary\" type='submit' onClick={sendMessage}>\n<SendIcon />\n         </IconButton>\n         \n          \n       </FormControl>\n      </form>\n<FlipMove>\n      {\n        messages.map(({id, message}) => (\n          <Message key={id} username={username} message={message} />\n        ))\n      }\n      </FlipMove>\n    </div>\n  );\n}\n\nexport default App;","C:\\Users\\Notebook\\Documents\\Messanger\\messanger-clone\\src\\Message.js",[],"C:\\Users\\Notebook\\Documents\\Messanger\\messanger-clone\\src\\firebase.js",[],["47","48"],"C:\\Users\\Notebook\\Documents\\Messanger\\messanger-clone\\src\\index.js",[],"C:\\MessangerOne\\messanger-clone\\src\\index.js",[],"C:\\MessangerOne\\messanger-clone\\src\\Message.js",[],"C:\\MessangerOne\\messanger-clone\\src\\firebase.js",[],"C:\\MessangerOne\\messanger-clone\\src\\App.js",["49","50","51"],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":2,"column":10,"nodeType":"58","messageId":"59","endLine":2,"endColumn":16},{"ruleId":"56","severity":1,"message":"60","line":2,"column":31,"nodeType":"58","messageId":"59","endLine":2,"endColumn":41},{"ruleId":"61","severity":1,"message":"62","line":39,"column":7,"nodeType":"63","endLine":39,"endColumn":103},{"ruleId":"52","replacedBy":"64"},{"ruleId":"54","replacedBy":"65"},{"ruleId":"56","severity":1,"message":"57","line":2,"column":10,"nodeType":"58","messageId":"59","endLine":2,"endColumn":16},{"ruleId":"56","severity":1,"message":"60","line":2,"column":31,"nodeType":"58","messageId":"59","endLine":2,"endColumn":41},{"ruleId":"61","severity":1,"message":"62","line":39,"column":7,"nodeType":"63","endLine":39,"endColumn":103},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'InputLabel' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["66"],["67"],"no-global-assign","no-unsafe-negation"]